:root {
    --color-default-black: hsl(200, 4%, 16%);
    --color-default-white: hsl(42, 66%, 93%);
    --color-primary: hsl(176, 89%, 37%);

    /* default */
    --width-default-nav: 10rem;
    --margin-default-nav: calc(var(--ratio-half) * 1rem);
    --margin-default-block: calc(var(--ratio-half) * 1rem);
    --margin-default-inline: calc(var(--margin-default-block) * var(--ratio-half));
    --border-radius-default: 1rem;
    --border-width-default: 0.25rem;
    --padding-default: 1rem;

    --padding-block-tag: calc(var(--ratio-three-quarters-of-quarter) * 1rem);
    --padding-inline-tag: calc(var(--ratio-three-quarter) * 1rem);
    --margin-tag: calc(var(--ratio-half) * 1rem);

    --ratio-three-quarters-of-three-quarter: 0.875;
    --ratio-three-quarter: 0.75;
    --ratio-half: 0.5;
    --ratio-quarter: 0.25;
    --ratio-three-quarters-of-quarter: 0.1875;
    --ratio-eighth: 0.125;

    --animation-duration-default: .5s;
}

@media (prefers-color-scheme: dark) {
    :root {
        /* TODO 변수 어감 변경하기 */
        --color-default-white: hsl(200, 4%, 16%);
        --color-default-black: hsl(42, 66%, 93%);
    }
}

@font-face {
    font-family: 'Pretendard Variable';
    src: url('/fonts/PretendardVariable.woff2') format('woff2');
    font-weight: normal;
    font-style: normal;
}

html {
    font-family: 'Pretendard Variable', sans-serif;

    color: var(--color-default-black);
    background-color: var(--color-default-white);
}

body {
    margin-block: var(--margin-default-block);
    margin-inline: var(--margin-default-inline);
}

a {
    color: unset;
    text-decoration-thickness: calc(var(--ratio-eighth) * 1rem); /** TODO: 앵커의 밑줄 두께를 변수화 */

    &:hover {
        text-decoration-color: var(--color-primary);
    }
}

#tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--margin-tag);
    justify-content: end;

    padding-inline-start: 0;
    list-style-type: none;
}

@media (prefers-reduced-motion: no-preference) {
    a {
        transition: text-decoration-color calc(var(--ratio-eighth) * 1s);
    }
}

@media (prefers-reduced-motion) {
    ::view-transition-group(*),
    ::view-transition-old(*),
    ::view-transition-new(*) {
        animation: none !important;
    }
}

/*!* 디폴트 값이라 활성화 필요가 없음 *!*/
/*!*::view-transition-old(root),*!*/
/*!*::view-transition-new(root) {*!*/
/*!*    animation-duration: 0.25s;*!*/
/*!*}*!*/

/* 내용만 교체되는 컴포넌트를 위한 트랜지션*/
[style*="--view-transition-name"] {
    view-transition-name: var(--view-transition-name);
}

::view-transition-old(header),
::view-transition-new(header) {
    height: 100%;
}

::view-transition-old(heading1),
::view-transition-new(heading1),
::view-transition-old(sub-category),
::view-transition-new(sub-category),
::view-transition-old(sub-posts),
::view-transition-new(sub-posts) {
    width: auto;
}

.border-outer {
    background-color: var(--color-default-black);
    border-color: var(--color-default-black);

    border-style: solid;
    border-width: var(--border-width-default);
    border-radius: calc(var(--border-radius-default) + var(--border-width-default));
    box-sizing: border-box;

    color: var(--color-default-white); /* 아우터 보더의 배경 색과 다른 색으로 컬러를 명시적으로 지정해야한다 */

    margin-block: var(--margin-default-block);
    margin-inline: var(--margin-default-inline);

    /* .border-inner 요소도 패딩을 바로 줄 수 있기 때문에 여기에 선언*/
    .padding {
        padding: var(--padding-default);
    }

    .negative {
        background-color: var(--color-default-black);
    }

    /* .border-inner 요소에 바로 적용 가능한 스타일 */
    /* TODO: revert-layer 가 무언지 확실히 조사하고 그걸로 적용할 수 있는지 확인하기 */
    .content {
        background-color: var(--color-default-white);
        color: var(--color-default-black);
    }

    /* 보더가 겹 구조라서 어쩔 수 없이 추가 되었는데 뺄 수 있으면 빼야합니다. nav 에서 사용하기 때문에 추가했습니다 */
    .full-height {
        height: 100%;
    }

    .border-inner {
        border-radius: var(--border-radius-default);
        overflow: clip;

        :first-child {
            margin-block-start: 0
        }

        :last-child {
            margin-block-end: 0
        }
    }
}

::view-transition-group(*) {
    animation-duration: var(--animation-duration-default);
    animation-delay: var(--animation-duration-default);
}

::view-transition-image-pair(border-outer-header) {
    display: none;
}

::view-transition-image-pair(border-inner-header) {
    width: 100%;
    height: 100%;
    transform: translateX(calc(var(--border-width-default) * -1)) translateY(calc(var(--border-width-default) * -1));

    border-style: solid;
    border-width: var(--border-width-default);
    border-radius: calc(var(--border-radius-default) + var(--border-width-default));
    border-color: var(--color-default-black);
    background-color: var(--color-default-black);
    /*background-color: plum;*/

    mix-blend-mode: difference;

    isolation: auto;
}

::view-transition-old(border-inner-header) {
    animation-name: fade-out;
    animation-duration: var(--animation-duration-default);
}

::view-transition-new(border-inner-header) {
    animation-name: fade-in;
    animation-duration: var(--animation-duration-default);
    animation-delay: calc(var(--animation-duration-default) * 2);
}

/* 데이터 */
/* 보더의 굴곡이 뷰 트랜지션 동안에는 변형되기 때문에 가리는 트릭을 사용했습니다. */
::view-transition-image-pair(border-outer-content) {
    display: none;
}

::view-transition-old(border-outer-content) {
    animation-duration: var(--animation-duration-default);
}

::view-transition-image-pair(border-inner-content) {
    width: 100%;
    height: 100%;
    transform: translateX(calc(var(--border-width-default) * -1)) translateY(calc(var(--border-width-default) * -1));

    border-style: solid;
    border-width: var(--border-width-default);
    border-radius: calc(var(--border-radius-default) + var(--border-width-default));
    border-color: var(--color-default-black);
    background-color: var(--color-default-white);

    /* 삐져 나가는 것을 자를려고했으나 전환 찰나의 순간 오버플로우가 밸생함 사용하면 안댐 */
    /*overflow: clip;*/
}

::view-transition-old(border-inner-content) {
    animation-name: fade-out;
    animation-duration: var(--animation-duration-default);
}

::view-transition-new(border-inner-content) {
    animation-name: fade-in;
    animation-duration: var(--animation-duration-default);
    animation-delay: calc(var(--animation-duration-default) * 2);
}

::view-transition-new(sub-category):only-child,
::view-transition-new(sub-posts):only-child {
    animation-name: fade-in;
    animation-duration: var(--animation-duration-default);
    animation-delay: calc(var(--animation-duration-default) * 2);
}

@keyframes fade-out {
    to {
        opacity: 0;
    }
}

@keyframes fade-in {
    from {
        opacity: 0;
    }
}
